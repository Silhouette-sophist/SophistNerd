plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //使用自定义插件，都在一个包里面，第一个是groovy插件，第二个是java插件。由于kotlin未编译为字节码，所以无法使用
    id 'com.example.sophist_plugin'
    id 'com.example.java_plugin'
}

//本模块，或者buildSrc模块中的插件
apply plugin: CustomPlugin

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.extend"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //仅为了查看gradle插件源码，正常运行不要这个依赖，否则会依赖冲突！！！
    //implementation 'com.android.tools.build:gradle:3.1.0'

    //implementation 'com.example.plugin_module:MyPlugin:1.0.0'
}

//当前工程定义的插件，内部使用
class CustomPlugin implements Plugin<Project>{
    @Override
    void apply(Project target) {
        println('CustomPlugin execute....')
        target.task("mytask"){
            doLast {
                println('MyPlugin中的task执行了')
            }
        }
    }
}